{
  "name": "react-reducer-provider",
  "description": "Asynchronous/Synchronous React Centralized State with Hooks and HOC",
  "version": "5.1.0",
  "license": "MIT",
  "author": "Gonzalo MÃ¼ller Bravo",
  "main": "cjs/react-reducer-provider.js",
  "module": "src/react-reducer-provider.js",
  "types": "src/react-reducer-provider.d.ts",
  "files": [
    "src"
  ],
  "sideEffects": [
    "src/Providers.js"
  ],
  "homepage": "https://react-reducer-provider.github.io",
  "repository": {
    "type": "git",
    "url": "https://github.com/gmullerb/react-reducer-provider"
  },
  "bugs": {
    "url": "https://github.com/gmullerb/react-reducer-provider/issues"
  },
  "keywords": [
    "AsyncReducerProvider",
    "AsyncMapperProvider",
    "ActuatorProvider",
    "useReducer",
    "useMapper",
    "useActuator",
    "reactjs",
    "flux",
    "redux",
    "mapper",
    "actuator",
    "state",
    "dispatcher",
    "asynchronous",
    "synchronous",
    "store",
    "reducer",
    "hook",
    "HOC",
    "tag",
    "SyncReducerProvider",
    "SyncMapperProvider",
    "useReducerState",
    "useReducerDispatcher",
    "useMapperState",
    "useMapperDispatcher",
    "injectReducer",
    "injectReducerState",
    "injectReducerDispatcher",
    "injectMapper",
    "injectMapperState",
    "injectMapperDispatcher",
    "SyncReducerProvider",
    "SyncMapperProvider",
    "SyncTaggedReducerProvider",
    "AsyncTaggedReducerProvider",
    "SyncTaggedMapperProvider",
    "AsyncTaggedMapperProvider",
    "TaggedActuatorProvider",
    "centralized",
    "multiple",
    "nested",
    "management",
    "react-js",
    "react.js",
    "action",
    "context",
    "context",
    "react",
    "react-context",
    "React.Context",
    "React.Provider",
    "react-hook",
    "useContext",
    "createContext",
    "Context.Consumer",
    "jsx",
    "tsx",
    "types",
    "typing",
    "typescript",
    "flow",
    "flow js",
    "flowjs",
    "flow-js",
    "flow-typed"
  ],
  "peerDependencies": {
    "react": ">=16.0.0"
  },
  "scripts": {
    "lint.any": "echo ==== Lint Any ====  && eslint --config config/.eslintrc-any.json \"**/[\\.a-zA-Z]*.+(js|json|yml|txt|md)\" \"**/.+(gitignore|npmignore)\" --no-eslintrc --ignore-pattern \"build\"  --ignore-pattern \"cjs\"",
    "lint.config": "echo ==== Lint Config ==== && eslint --color \"config/**/*.js\"",
    "lint.main": "echo ==== Lint Main Source ==== && eslint --color \"src/**/*.js\"",
    "lint.main.fix": "echo ==== Lint Main Source ==== && eslint --fix --color \"src/**/*.js\"",
    "lint.flow": "echo ==== Lint Flow code ==== && eslint --config tests/typings/flow/.eslintrc.json --color \"src/**/*.flow\"",
    "lint.ts": "echo ==== Lint TS Code ==== && eslint --config tests/typings/ts/.eslintrc.json --color \"src/**/*.ts\"",
    "lint.test": "echo ==== Lint Test source ==== && eslint --config config/test/.eslintrc.json --color \"tests/js/**/*.+(js|jsx)\"",
    "lint.test.fix": "echo ==== Lint Test source ==== && eslint --fix --color \"tests/js/**/*.+(js|jsx)\"",
    "transpile.flow": "echo ==== Transpile Flow ==== && flow check --color=always ./config/main",
    "transpile.ts": "echo ==== Transpile Typescript ==== && tsc --project config/main/tsconfig.json",
    "test.flow": "echo ==== Test Flow ==== && flow check --color=always ./config/test/typings",
    "test.ts": "echo ==== Test Typescript ==== && tsc --extendedDiagnostics --project config/test/typings/tsconfig.json",
    "pretest": "npm run build.cjs",
    "test": "echo ==== Test ==== && karma start config/test/karma.conf.js --colors",
    "pretest.1": "npm run build.cjs",
    "test.1": "echo ==== Test ==== && SINGLE_TEST=1 karma start config/test/karma.conf.js --colors",
    "build.cjs": "echo ==== Build CommonJS Module ==== && rollup --config ./config/main/rollup.config.js",
    "prepack": "npm run build.cjs && echo ==== Build Package ====",
    "check.code": "npm run lint.main && npm run lint.test && npm run test",
    "check.ts": "npm run lint.ts && npm run transpile.ts && npm run test.ts",
    "check.flow": "npm run lint.flow && npm run transpile.flow && npm run test.flow",
    "check.typings": "npm run check.ts && npm run check.flow",
    "check": "npm install && npm run lint.any && npm run lint.config && npm run check.code && npm run check.typings && mkdir -p build && cd build && npm pack ../",
    "check.all": "npm run check && npm audit",
    "prepublishOnly": "npm run check"
  },
  "devDependencies": {
    "@babel/core": "~7.6.0",
    "@babel/preset-env": "~7.6.0",
    "@babel/preset-react": "~7.0.0",
    "@typescript-eslint/eslint-plugin": "^4.20.0",
    "@typescript-eslint/parser": "^4.20.0",
    "@types/enzyme": "~3.10.8",
    "@types/jasmine": "~3.6.9",
    "@types/jasmine-enzyme": "~7.0.1",
    "@types/react": "~16.9.5",
    "any-eslint-parser": "1.0.0-alpha",
    "babel-eslint": "10.0.3",
    "babel-loader": "~8.0.6",
    "delay": "^4.3.0",
    "enzyme": "~3.11.0",
    "enzyme-adapter-react-16": "~1.15.6",
    "eslint": "^7.23.0",
    "eslint-plugin-base-style-config": "^2.8.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-flowtype": "~5.4.0",
    "eslint-plugin-unused-imports": "^1.1.1",
    "eslint-plugin-react": "^7.23.1",
    "eslint-plugin-regex": "^1.7.0",
    "flow-bin": "~0.147.0",
    "husky": "^4.2.5",
    "istanbul-instrumenter-loader": "^3.0.1",
    "jsdom": "^16.2.2",
    "jasmine-core": "~3.7.1",
    "jasmine-enzyme": "~7.1.2",
    "karma": "^5.2.3",
    "karma-chrome-launcher": "^3.1.0",
    "karma-coverage-istanbul-reporter": "~2.1.0",
    "karma-jsdom-launcher": "^8.0.2",
    "karma-html-reporter": "~0.2.7",
    "karma-jasmine": "~4.0.1",
    "karma-jasmine-html-reporter": "~1.5.4",
    "karma-junit-reporter": "~2.0.1",
    "karma-mocha-reporter": "~2.2.5",
    "karma-notify-reporter": "~1.3.0",
    "karma-webpack": "~4.0.2",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "rollup": "^2.45.1",
    "rollup-plugin-cleanup": "^3.2.1",
    "rollup-plugin-uglify": "^6.0.4",
    "typescript": "^4.2.3",
    "webpack": "~4.39.3"
  },
  "husky": {
    "hooks": {
      "pre-push": "npm run check"
    }
  }
}
